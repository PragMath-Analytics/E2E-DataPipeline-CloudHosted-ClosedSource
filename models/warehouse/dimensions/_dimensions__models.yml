# Note: "tests" are now called "data_tests" & have been updated accordingly
# You may delete these comments
version: 2

models:
  - name: dim_calendar_dates
    description: '{{ doc("dim_calendar_dates_description") }}'
    columns:
      - name: calendar_date_sk
        data_tests:
          - not_null
          - unique
        description: This is a surrogate key for the calendar date. It is generated by hashing the date_day column. If the date_day is null, a default value of '_dbt_utils_surrogate_key_null_' is used. The hash function used is MD5.
        data_type: text
      - name: date_day
        description: This column represents the specific date for each record in the format YYYY-MM-DD. It is derived from the raw data and is of the data type 'date'.
        data_type: date
      - name: day_of_week_number
        description: This column represents the day of the week for each date in the calendar, with values ranging from 1 (Monday) to 7 (Sunday). The value is extracted from the 'date_day' column using the EXTRACT(ISODOW FROM date_day) function.
        data_type: double precision
      - name: day_of_month_number
        description: This column represents the day of the month for each date in the dataset. The values range from 1 to 31, corresponding to the day of the month.
        data_type: double precision
      - name: day_of_year_number
        description: This column represents the day of the year for each date in the 'date_day' column. The value is extracted using the EXTRACT(DOY FROM date_day) function in SQL, where DOY stands for 'Day of Year'. The values range from 1 to 365 (or 366 in leap years).
        data_type: double precision
      - name: week_of_year_number
        description: This column represents the week number of the year for the given date. It is extracted from the 'date_day' column using the EXTRACT function with the WEEK parameter in SQL. The value is a double precision number.
        data_type: double precision
      - name: month_of_year_number
        description: This column represents the month of the year as a number, extracted from the date_day column. The value ranges from 1 (January) to 12 (December).
        data_type: double precision
      - name: quarter_of_year_number
        description: This column represents the quarter of the year for each date. It is extracted from the date_day column and is of double precision data type.
        data_type: double precision
      - name: year_number
        description: This column represents the year of the date. It is extracted from the 'date_day' column using the EXTRACT(YEAR FROM date_day) function. The data type is double precision.
        data_type: double precision
      - name: short_weekday_name
        description: This column represents the abbreviated name of the weekday for the given date. It is derived from the 'date_day' column using the TO_CHAR function in SQL. The values in this column are text strings, such as 'Mon' for Monday, 'Tue' for Tuesday, etc.
        data_type: text
      - name: full_weekday_name
        description: This column contains the full name of the weekday for each date in the 'date_day' column. The names are in text format.
        data_type: text
      - name: short_month_name
        description: This column contains the abbreviated name of the month for each date in the 'date_day' column. The abbreviation is a three-letter string (e.g., 'Jan' for January, 'Feb' for February, etc.).
        data_type: text
      - name: full_month_name
        description: This column represents the full name of the month for the given date. It is extracted from the 'date_day' column using the TO_CHAR function in SQL. The format is the full textual representation of the month (e.g., 'January', 'February', etc.).
        data_type: text
      - name: short_month_year
        description: This column contains the abbreviated name of the month and the year of the date. The format is 'Mon YYYY'. For example, 'Jan 2020' for January 2020.
        data_type: text
      - name: full_month_year
        description: This column contains the full name of the month and the year of the date. The format is 'Month Year'. For example, 'January 2022'. This is derived from the 'date_day' column.
        data_type: text
  - name: dim_games
    description: '{{ doc("dim_games_description") }}'
    columns:
      - name: game_sk
        data_tests:
          - not_null
          - unique
        description: A surrogate key for the game, generated by hashing the game_id. This key is unique for each game and can be used for joining with other tables.
        data_type: text
      - name: game_id
        description: An integer that uniquely identifies each game.
        data_type: integer
      - name: home_team_id
        description: An integer representing the unique identifier for the home team in a specific game.
        data_type: integer
      - name: home_team_name
        description: The name of the home team participating in the game.
        data_type: text
      - name: away_team_id
        description: This is an integer column that represents the unique identifier for the away team in a particular game.
        data_type: integer
      - name: away_team_name
        description: The name of the team that is playing away from their home ground in the game.
        data_type: text
      - name: league_id
        description: An integer representing the unique identifier for the league in which the game is played.
        data_type: integer
      - name: league_name
        description: The name of the league in which the game is played. This is a text field.
        data_type: text
      - name: season
        description: The season column represents the specific season in which the game was played. It is represented as a text string.
        data_type: text
      - name: status_long
        description: This column represents the detailed status of the game. It provides more information than the 'status_short' column. The status could be 'Scheduled', 'In Progress', 'Postponed', 'Cancelled', 'Finished', etc.
        data_type: text
      - name: status_short
        description: This column represents the short form status of the game. It could be values like 'FT' for Full Time, 'HT' for Half Time, 'OT' for Over Time, etc.
        data_type: text
      - name: country_id
        description: An integer representing the unique identifier for the country where the game is played.
        data_type: integer
      - name: country_code
        description: The ISO 3166-1 alpha-2 country code representing the country where the game was played.
        data_type: text
      - name: country_name
        description: The name of the country where the game is being played.
        data_type: text
      - name: timezone
        description: The timezone column represents the timezone in which the game was played. It is a text field and can contain any valid timezone string.
        data_type: text
      - name: is_home_team_win
        description: A boolean value indicating whether the home team won the game. True if the home team won, false otherwise.
        data_type: boolean
      - name: is_away_team_win
        description: A boolean field indicating whether the away team won the game. True if the away team won, false otherwise.
        data_type: boolean
      - name: game_date
        description: The date when the game was played. It is stored in the format YYYY-MM-DD.
        data_type: date
      - name: game_time
        description: The time at which the game is scheduled to start. This is represented in the local time of the game's location.
        data_type: time without time zone
      - name: game_at
        description: This column represents the timestamp of when the game occurred. It is a combination of the game_date and game_time columns. The data type is timestamp without time zone.
        data_type: timestamp without time zone
      - name: created_at
        description: The timestamp when the record was created in the database. This field is automatically populated by the system and is in the timezone format.
        data_type: timestamp with time zone
  - name: dim_teams
    description: '{{ doc("dim_teams_description") }}'
    columns:
      - name: team_sk
        data_tests:
          - not_null
          - unique
        description: A unique surrogate key generated using MD5 hashing. It is created by concatenating the team_id from the teams table, team_id from the franchises table, head_coach_id from the coaches table, and general_manager_id from the managers table. If any of these values are null, a placeholder value '_dbt_utils_surrogate_key_null_' is used.
        data_type: text
      - name: team_id
        description: An integer value representing the unique identifier for each team.
        data_type: integer
      - name: team_name
        description: The official name of the NBA team.
        data_type: text
      - name: team_logo_url
        description: This column contains the URL of the team's logo. It is a text field that is populated from the 'teams' source table.
        data_type: text
      - name: country_name
        description: The name of the country where the team is based.
        data_type: text
      - name: year_started
        description: The year in which the team was established.
        data_type: integer
      - name: head_coach
        description: The name of the head coach for the team. This is a text field that is populated from the 'stg_gsheets__franchise_head_coaches' source table.
        data_type: text
      - name: general_manager
        description: The name of the general manager of the team. This is a text field that is populated from the 'stg_gsheets__franchise_general_managers' source table.
        data_type: text
      - name: division
        description: The division column represents the division in which the team competes. This is typically a subset of the conference. For example, in the NBA, the Eastern Conference has the Atlantic, Central, and Southeast divisions.
        data_type: text
      - name: conference
        description: The conference column represents the conference in which the team competes. This is typically a regional designation within the league structure.
        data_type: text
